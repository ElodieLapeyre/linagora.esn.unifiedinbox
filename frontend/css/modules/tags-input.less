@tagsInputLineHeight: 36px;
@tagListMaxHeight: 70px;

.inbox-tags-input {

  .host {
    margin: 0;
  }

  .tags {

    max-height: @tagListMaxHeight; // ~2 lines of tags

    .tag-item {
      .flex-shrink(0);
      .ShadowedShape(none);

      margin: 2px 5px 2px 0;
      padding: 4px 8px;

      font-size: @autocompleteFontSize;
      text-transform: none;
      color: @secondaryTextColor;
      background-color: @body-bg;

      &:hover, &.focused {
        color: @text-color;
        background-color: @darkenBgColor;
      }

      &.selected, &:active, &:active:hover {
        color: @text-color;
        background-color: darken(@darkenBgColor, 3%);
      }

      ti-tag-item > * {
        .flex-vertical-centered;

        .remove-button {
          color: inherit;
          background-color: inherit;

          padding: 5px 6px 5px 5px;
          // As the tag itself has some padding, setting negative margins allows the interaction zone to touch
          // the border of the tags, thus allowing the user to touch anywhere on the right part of the tag to remove it
          margin: -5px -8px -5px 0;

          line-height: @tagsInputLineHeight / 2; // Desperate tentative to better align the X on Firefox Android
        }
      }
    }

  }

  .autocomplete {
    .suggestion-list {
      max-height: ~"calc(100vh - @{header-height} - @{sub-header-height} - @{tagsInputLineHeight})";

      .suggestion-item {
        color: @secondaryTextColor;

        &.selected {
          color: @text-color;
          background-color: @darkenBgColor;

          em {
            color: inherit;
            background-color: inherit;
          }
        }

        em {
          font: inherit;
          font-weight: bold;
        }

        .auto-complete-match {
          img {
            .avatar(35px);
          }

          .row {
            font-size: 0.8em;
          }
        }
      }
    }
  }
}

composer, composer-desktop {

  .inbox-tags-input {

    .tags {
      .flex;

      .input {
        .flex-shrink(0);

        height: 25px;
        text-align: right;
      }

      .tag-list {
        .flex;
        .flex-shorthand(1, 1);

        overflow: hidden;
      }

    }

  }

}

composer {

  .inbox-tags-input {

    .tags .tag-list .tag-item {
      line-height: 1.8em;

      .remove-button {
        display: none; // Hide the remove-button (X) of ngTagsInput for mobile devices in display mode
      }

    }

  }

}

composer-desktop {

  .inbox-tags-input {

    .autocomplete {
      .suggestion-list {
        max-height: 300px;
      }
    }

    .tags {
      .transition(max-height 250ms ease-out);

      display: block;
      max-height: @tagListMaxHeight;

      &.focused {
        max-height: @tagListMaxHeight * 2;
      }

      .input {
        text-align: left;
      }

      .tag-list {
        display: inline;
        width: auto;
        overflow: auto;
      }
      
      .tag-item {
        cursor: default;
      }
    }

  }

  .form-group {
    &:not(:last-child):not(:first-child) .tags {
      margin: 5px 0;
    }
  }

}
